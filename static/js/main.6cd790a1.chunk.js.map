{"version":3,"sources":["App.module.css","components/JobCard.js","App.js","index.js","components/JobCard.module.css"],"names":["module","exports","JobCard","title","company","description","className","classes","jobCard","jobCard__firstContainer","jobCard__title","jobCard__secondContainer","jobCard__company","jobCard__description","App","useState","jobs","setJobs","enteredFilter","setEnteredFilter","loading","setIsLoading","makeRequest","a","fetch","method","body","JSON","stringify","companySkills","dismissedListingHashes","fetchJobDesc","jobTitle","locations","numJobs","previousListingHashes","headers","request","json","useEffect","logo","src","jobs__h1","jobs__list","jobs__search","onSubmit","e","preventDefault","filteredJobs","filter","job","companyName","toLowerCase","includes","type","value","jobs__input","placeholder","onChange","console","log","target","jobs__icon","action__buttons","onClick","latestJobs","postedDate","map","shortDesc","id","Math","random","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6cd790a1.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"jobs__list\":\"App_jobs__list__1WcpM\",\"jobs__h1\":\"App_jobs__h1__2dub2\",\"logo\":\"App_logo__c9yT8\",\"jobs__input\":\"App_jobs__input__3CW4u\",\"jobs__icon\":\"App_jobs__icon__2wXdu\",\"action__buttons\":\"App_action__buttons__1U5lG\",\"jobs__search\":\"App_jobs__search__6MVSa\"};","import React from \"react\";\r\n// Importing classes from JobCard CSS file, that is a module.\r\nimport classes from \"./JobCard.module.css\";\r\nfunction JobCard({ title, company, description }) {\r\n  // Every JobCard will have a Job Title, a company name, and a description. All of these 3 are stylized from the module file and will be render below.\r\n  return (\r\n    <div className={classes.jobCard}>\r\n      <div className={classes.jobCard__firstContainer}>\r\n        <h1 className={classes.jobCard__title}>{title}</h1>\r\n      </div>\r\n      <div className={classes.jobCard__secondContainer}>\r\n        <h2 className={classes.jobCard__company}>{company}</h2>\r\n        <div className={classes.jobCard__description}>\r\n          <p>{description}</p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default JobCard;\r\n","import classes from \"./App.module.css\";\nimport { useEffect, useState } from \"react\";\nimport JobCard from \"./components/JobCard\"; //importgin the JobCard component\nimport SearchIcon from \"@material-ui/icons/Search\"; //importing the SearchIcon from material-ui third-party library\nfunction App() {\n  // Here I set and create the first states with useState\n  const [jobs, setJobs] = useState([]); //state for the jobs array\n  const [enteredFilter, setEnteredFilter] = useState(\"\"); //state for whatever the user enters in the input\n  const [loading, setIsLoading] = useState(false); //state that indicates when a request is beeing made\n\n  const makeRequest = async () => {\n    // this function makes a request to ZIPPIA API and with the object returned it will fill the jobs state with the setJobs function\n    setIsLoading(true);\n    setEnteredFilter(\"\");\n    const request = await fetch(\"https://www.zippia.com/api/jobs/\", {\n      method: \"POST\",\n      body: JSON.stringify({\n        companySkills: true,\n        dismissedListingHashes: [],\n        fetchJobDesc: true,\n        jobTitle: \"Business Analyst\",\n        locations: [],\n        numJobs: 10, //Rendering only 10 results, as wanted\n        previousListingHashes: [],\n      }),\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    });\n    const json = await request.json();\n    setIsLoading(false);\n    await setJobs(json);\n  };\n  useEffect(() => {\n    // with the useEffect I made the app only triggers the makeRequest function at the very first moment the app loads\n    makeRequest();\n  }, []);\n\n  const submitHandler = (e) => {\n    // Once the user click the search button, this function will filter for any jobs that has a company name with the words the user writed at the input. And so, only these filtered jobs will be displayed\n    e.preventDefault();\n    setIsLoading(true);\n    const filteredJobs = jobs.jobs.filter((job) => {\n      return job.companyName\n        .toLowerCase()\n        .includes(enteredFilter.toLowerCase());\n    });\n\n    setJobs({ jobs: filteredJobs });\n    setIsLoading(false);\n    if (enteredFilter === \"\") {\n      makeRequest();\n    }\n  };\n  const filterHandler = () => {\n    // When the user clicks the latests jobs button, this function will be triggered and it will show only the jobs that were posted 7 days ago until now.\n    const latestJobs = jobs.jobs.filter((job) => {\n      return job.postedDate.includes(\n        \"1\" || \"2\" || \"3\" || \"4\" || \"5\" || \"6\" || \"7\"\n      );\n      // Because the postedDate propery was writed like: \"7d ago\" i needed to use that aproach above\n    });\n\n    setJobs({ jobs: latestJobs });\n  };\n  return (\n    <div>\n      <img\n        className={classes.logo}\n        src=\"https://www.zippia.com/ui-router/images/header/logo_white.svg\"\n      />\n      <h1 className={classes.jobs__h1}>JOBS</h1>\n      <div className={classes.jobs__list}>\n        <div className={classes.jobs__search}>\n          <form onSubmit={submitHandler}>\n            {/* Input were the user can write the company name and search for it */}\n            <input\n              type=\"text\"\n              value={enteredFilter}\n              className={classes.jobs__input}\n              placeholder=\"Search by company name\"\n              onChange={(e) => {\n                console.log(e.target.value);\n                setEnteredFilter(e.target.value);\n              }}\n            />\n            <button type=\"submit\" className={classes.jobs__icon}>\n              <SearchIcon />\n            </button>\n          </form>\n        </div>\n        {loading ? <h4>Loading...</h4> : \"\"}\n        {/* When the user makes a request the loading state will be true and that header above will be displayed. Once the request is done the state is set to false again.  */}\n        <div className={classes.action__buttons}>\n          <button className={classes.jobs__icon} onClick={filterHandler}>\n            Latest Jobs\n          </button>\n          <button className={classes.jobs__icon} onClick={makeRequest}>\n            All Jobs\n          </button>\n        </div>\n\n        {jobs?.jobs?.map((job) => {\n          // for every job it will generate a JobCard component\n          return (\n            <JobCard\n              title={job.jobTitle}\n              company={job.companyName}\n              description={job.shortDesc}\n              key={Math.random()}\n              id={Math.random()}\n            />\n          );\n        })}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"jobCard\":\"JobCard_jobCard__2nXAz\",\"jobCard__firstContainer\":\"JobCard_jobCard__firstContainer__1xBEa\",\"jobCard__title\":\"JobCard_jobCard__title__1gyMW\",\"jobCard__secondContainer\":\"JobCard_jobCard__secondContainer__1HoJ1\",\"jobCard__company\":\"JobCard_jobCard__company__xCi7G\",\"jobCard__description\":\"JobCard_jobCard__description__3_G9O\"};"],"sourceRoot":""}